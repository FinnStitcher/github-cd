/* 
============================================================================================

Lots of things will be annoyingly spaced out just so that concepts can be seperated nicely 
This aims to combine everything up to this point including HTML and CSS

This will also include other niche things that aren't covered in detail in these notes because 
it would be too long to explicitly type everything out when there are many resources already 
out there that dives into them.

============================================================================================
*/

/* 
    I want the children of the body tag to be side by side
    I think this is the easiest fix with the least amount of issues in the scope of this app
    I don't recommend donig this for other proejcts
*/
body {
  display: flex;
  width: 100%;
}

#calculator {
  /* multiple ways to do colors - Hex code (#000000), rbg, name of color you want */
  background-color: rgb(237, 237, 237);
  /* rem is type of measurement units, it is more dynamic */
  padding: 2rem;
  /* vw = view width. I'm setting the width to be 30% of the view width */
  /* Doing a regular 30% has a higher probablity to have different results on different machines */
  width: 30vw;
}

#display {
  border-bottom: solid 2px;
  height: fit-content;
  width: 100%;
  font-size: 2rem;
}

.buttonContainer {
  width: 100%;

  /* This is how to activate CSS grid on a HTML element */
  display: grid;
  /* Needs to be paired with line above */
  /* fr = fractional unit. Allows browser to do percentage math for you only if you are using CSS grid */
  grid-template-columns: 1fr 1fr 1fr 1fr;

  /* also only works with CSS grid. adds gaps between all children elements in the grid */
  gap: 1rem;
  margin: 1rem 0rem;
}

/* 
    CSS grid
    https://css-tricks.com/snippets/css/complete-guide-grid/
    https://css-tricks.com/look-ma-no-media-queries-responsive-layouts-using-css-grid/
*/

/*












*/

/* Styles for all the buttons */

.btn {
  padding: 1rem 1.5rem;
  font-size: 2rem;
  cursor: pointer;
  border-radius: 1rem;
  border: solid 2px black;
}

/* 
    Psuedo Classes 
    https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes
*/
.btn:hover {
  background-color: rgb(249, 255, 210);
}

.btn:active {
  transform: scale(0.9);
}

/* styles for different types of btns */

.operation {
  background-color: rgb(85, 85, 255);
}

.equals {
  background-color: rgb(152, 255, 176);
}

.clear {
  background-color: rgb(255, 152, 152);
}

/* 













*/

/* Styles for the results and your current history */
#resultsContainer {
  background-color: rgb(237, 237, 237);
  width: 30vw;
  margin: 0 0 0 4rem;
  padding: 2rem;
}

#result {
  border-bottom: 2px solid black;
  font-size: 1.6rem;
  display: flex;
  
}

#result > h1 {
  flex-grow: 1;
  /* padding: 1rem 2rem; */
  margin: 0rem;
}

#result > button {
  color: white;
  background-color: rgb(53, 126, 146);
  border-radius: .7rem;
  padding: 0rem 1rem;
}

#history {
  width: 100%;
}

.choice {
  display: flex;
  width: 100%;
  margin: 1rem 0rem;
  border: solid 3px black;
  border-radius: 1rem;
}

.choice > h1 {
  flex-grow: 1;
  color: rgb(53, 126, 146);
  padding: 1rem 2rem;
  margin: 0rem;
  font-size: 2rem;
}

.choice > button {
  color: white;
  background-color: rgb(53, 126, 146);
  border-radius: .7rem;
  padding: 0rem 1rem;
}
